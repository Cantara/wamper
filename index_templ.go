// Code generated by templ@v0.2.364 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	scheduletasks "github.com/cantara/gober/scheduletasks"
)

func index(name string, sites []string, screenshotTasks []scheduletasks.TaskMetadata, slackTasks []scheduletasks.TaskMetadata) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><title>")
		if err != nil {
			return err
		}
		var var_2 string = name
		_, err = templBuffer.WriteString(templ.EscapeString(var_2))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link href=\"style.css\" rel=\"stylesheet\"><script src=\"htmx.min.js\">")
		if err != nil {
			return err
		}
		var_3 := ``
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></head><body><div class=\"content\"><div><h1>")
		if err != nil {
			return err
		}
		var_4 := `Image`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><select name=\"site\" hx-get=\"/image\" hx-target=\"#image-result\">")
		if err != nil {
			return err
		}
		for _, s := range append([]string{""}, sites...) {
			_, err = templBuffer.WriteString("<option name=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(s))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\">")
			if err != nil {
				return err
			}
			var var_5 string = s
			_, err = templBuffer.WriteString(templ.EscapeString(var_5))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</option>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</select><div id=\"image-result\"></div></div><div class=\"flex\">")
		if err != nil {
			return err
		}
		err = now().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<button hx-get=\"/now\" hx-trigger=\"click\" hx-target=\"#now\" hx-swap=\"outerHTML\">")
		if err != nil {
			return err
		}
		var_6 := `Refresh!`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div><div class=\"flex\"><h2>")
		if err != nil {
			return err
		}
		var_7 := `Screenshot Tasks`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><button hx-get=\"/screenshot/tasks\" hx-trigger=\"click\" hx-target=\"#screenshot-tasks\" hx-swap=\"outerHTML\">")
		if err != nil {
			return err
		}
		var_8 := `Refresh!`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div>")
		if err != nil {
			return err
		}
		err = tasks("screenshot", screenshotTasks).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<div class=\"flex\"><h2>")
		if err != nil {
			return err
		}
		var_9 := `Slack Tasks`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><button hx-get=\"/slack/tasks\" hx-trigger=\"click\" hx-target=\"#slack-tasks\" hx-swap=\"outerHTML\">")
		if err != nil {
			return err
		}
		var_10 := `Refresh!`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div>")
		if err != nil {
			return err
		}
		err = tasks("slack", slackTasks).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
